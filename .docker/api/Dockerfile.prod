# Stage 1: Build the application
FROM rust:1.84-slim-bookworm AS builder

WORKDIR /usr/src/app

# Install required system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Create blank project and copy manifests
COPY Cargo.toml Cargo.lock ./

# Cache dependencies
RUN mkdir src && \
    echo "fn main() {}" > src/main.rs && \
    cargo build --release && \
    rm -rf src

# Copy source code and build
COPY src src
RUN cargo build --release

# Stage 2: Create minimal runtime image
FROM debian:bookworm-slim AS runtime

WORKDIR /app

# Install runtime dependencies and curl for healthcheck
RUN apt-get update && apt-get install -y \
    libssl3 \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN addgroup --system --gid 1001 rust && \
    adduser --system --uid 1001 api

# Copy binary from builder
COPY --from=builder /usr/src/app/target/release/api ./

# Set ownership and permissions
RUN chown api:rust /app/api && \
    chmod +x /app/api

# Switch to non-root user
USER api

# Expose port
EXPOSE 3100

# Set environment variables
ENV RUST_LOG=info
ENV API_PORT=3100
ENV API_HOST=0.0.0.0

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3100/health || exit 1

# Run the application
CMD ["./api"]
